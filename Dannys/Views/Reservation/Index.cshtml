@model ReservationCreateDto
<style>
    .displayNone {
        display: none;
    }

    input::placeholder {
        color: white;
    }

    input[type="date"]::-webkit-calendar-picker-indicator {
        filter: invert(100%) !important;
    }

    ul {
        color: red;
    }
</style>
<main class="reservation">
    <section id="News-banner">

        <div class="banner-part">
            <div class="banner-content">
                <h3>make an online</h3>
                <h1 class="bannerTitle">Reservation</h1>
                <p class="connection">
                    Or call us at
                    <span>00 40 555 1234</span>
                    any day from
                </p>
                <p class="yellow">10:00 AM - 10:00 PM</p>
            </div>
            <div class="overlay"></div>
        </div>
    </section>
    <div class="content">
        <div class="main">

            <div class="container">
                <div class="booking-content">
                    <div class="booking-image">
                        <img class="booking-img" src="/assets/images/reservation/form-img.jpg" alt="Booking Image">
                    </div>
                    <div class="booking-form">
                        <form method="post" id="booking-form">
                            <h2>Booking place for your dinner!</h2>
                            <div class="text-danger" asp-validation-summary="ModelOnly"></div>

                            <div class="form-group form-input">
                                <input asp-for="Name" required />
                                <label asp-for="Name" class="form-label">Your name</label>
                                <span class="text-danger" asp-validation-for="Name"></span>
                            </div>
                            <div class="form-group form-input">
                                <input asp-for="PhoneNumber" required />
                                <label asp-for="PhoneNumber" class="form-label">Your phone number</label>
                                <span class="text-danger" asp-validation-for="PhoneNumber"></span>

                            </div>
                            <div class="form-group">
                                <div class="select-list">
                                    @*<select asp-for="Time" required>
                                            <option disabled selected value="">Time</option>
                                         @{
                                             for (int i = 10; i < 20; i++)
                                             {

                                            <option value="@i">@i:00 </option>

                                             }
                                         }
                                        </select>*@
                                    <input class="dateTimeInput" asp-for="Time" required />
                                    <label asp-for="Time"></label>
                                    <br />
                                    <span class="text-danger errorMessage" asp-validation-for="Time"></span>

                                </div>
                            </div>
                            @*<div class="form-group">
                                    <div class="select-list">
                                        <select name="food" id="food" required>
                                            <option value="">Food</option>
                                            <option value="seasonalfish">Seasonal steamed fish</option>
                                            <option value="assortedmushrooms">Assorted mushrooms</option>
                                        </select>
                                    </div>
                                </div>*@
                            <div class="form-radio">
                                <label class="label-radio"> Select Your Dining Space</label>
                                <div class="radio-item-list">
                                    <span class="radio-item">
                                        <input type="radio" name="number_people" class="personCountInput" data-count="2" value="2" id="number_people_2" />
                                        <label for="number_people_2">2</label>
                                    </span>
                                    <span class="radio-item">
                                        <input type="radio" name="number_people" class="personCountInput" data-count="4" value="4" id="number_people_4" />
                                        <label for="number_people_4">4</label>
                                    </span>
                                    <span class="radio-item">
                                        <input type="radio" name="number_people" class="personCountInput" data-count="6" value="6" id="number_people_6" />
                                        <label for="number_people_6">6</label>
                                    </span>
                                    <span class="radio-item">
                                        <input type="radio" name="number_people" class="personCountInput" data-count="8" value="8" id="number_people_8" />
                                        <label for="number_people_8">8</label>
                                    </span>
                                    <span class="radio-item">
                                        <input type="radio" name="number_people" class="personCountInput" data-count="10" value="10" id="number_people_10" />
                                        <label for="number_people_10">10</label>
                                    </span>
                                </div>
                            </div>


                            <div class="form-group displayNone">
                                <div class="select-list">
                                    <select asp-for="TableId" class="tableForm" required>
                                        <option disabled selected value="">Table</option>
                                        <span class="text-danger" asp-validation-for="TableId"></span>


                                    </select>
                                </div>
                            </div>

                            <div class="form-submit">
                                <input type="submit" value="Book now" class="submit" id="submit" name="submit" />
                                <a href="#" class="vertify-booking">Verify your booking info from your phone</a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

        </div>
    </div>


</main>

<script>const countInputs = document.querySelectorAll('.personCountInput');
    const tableArea = document.querySelector('.tableForm');
    const errorMessage = document.querySelector('.errorMessage')
    const dateTimeInput = document.querySelector('.dateTimeInput')

    function setMinDateTime() {
        const now = new Date();
        const year = now.getFullYear();
        const month = String(now.getMonth() + 1).padStart(2, '0');
        const day = String(now.getDate()).padStart(2, '0');
        const hours = String(now.getHours() + 2).padStart(2, '0');
        const minutes = String(now.getMinutes()).padStart(2, '0');

        const currentDateTime = `${year}-${month}-${day}T${hours}:${minutes}`;
        dateTimeInput.min = currentDateTime;
    }

    setMinDateTime();



    function validateDateTime() {

        const selectedDateTime = new Date(dateTimeInput.value);
        const currentDateTime = new Date();
        const selectedHours = selectedDateTime.getHours();

        // Check if selected date and time is in the past
        if (selectedDateTime < currentDateTime) {
            errorMessage.innerHTML = "You cannot select a past date and time.";
            dateTimeInput.value = "";
            return;
        }

        // Check if selected time is within the allowed range (10 AM to 8 PM)
        if (selectedHours < 10 || selectedHours > 20 || (selectedHours === 20 && selectedDateTime.getMinutes() > 0)) {
            errorMessage.innerHTML = "You can only select a time between 10:00 AM and 8:00 PM.";
            dateTimeInput.value = "";
        } else {
            errorMessage.textContent = "";
        }
    }


    dateTimeInput.addEventListener('input', validateDateTime)

    countInputs.forEach(x => {
        x.addEventListener('click', async () => {
            tableArea.parentElement.parentElement.classList.remove('displayNone')

            const response = await fetch(`https://localhost:7029/reservation/GetTablesByPersonCount?count=${x.dataset.count}&time=${dateTimeInput.value}`);

            const tables = await response.json();



            tableArea.innerHTML = `<option disabled selected value="">Table</option>`;

            tables.forEach(table => {
                tableArea.innerHTML += `
                    <option value="${table.tableNo}"> Table №${table.tableNo} ${table.reservInfo != null ? "   -" + table.reservInfo : ""} </option>

                `;
            });
            if (tables.length == 0) {

                tableArea.innerHTML += `<option disabled  value="">Please select other variants</option>`;
            }
        });





        dateTimeInput.addEventListener('blur', async () => {
            activeElement = document.querySelector('.active');

            if (activeElement != undefined) {

                const response = await fetch(`https://localhost:7029/reservation/GetTablesByPersonCount?count=${activeElement.children[0].dataset.count}&time=${dateTimeInput.value}`);

                const tables = await response.json();



                tableArea.innerHTML = `<option disabled selected value="">Table</option>`;

                tables.forEach(table => {
                    tableArea.innerHTML += `
                    <option value="${table.tableNo}"> Table №${table.tableNo} ${table.reservInfo != null ? "   -" + table.reservInfo : ""}</option>

                `;
                });
                if (tables.length == 0) {

                    tableArea.innerHTML += `<option disabled  value="">Please select other variants</option>`;
                }
            }
        })
    });

    document.addEventListener('DOMContentLoaded', (event) => {
        var message = '@TempData["message"]'

        if (message) {

        Toastify({
            text: message,
            duration: 3000,
            destination: "https://github.com/apvarun/toastify-js",
            newWindow: true,
            close: true,
            gravity: "bottom",
            position: "right",
            stopOnFocus: true,
            style: {
                background: "#c93",
            },
        
        }).showToast();
        }


            

    });
</script>

